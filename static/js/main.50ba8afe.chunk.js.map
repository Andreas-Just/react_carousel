{"version":3,"sources":["api/emoji.js","components/CarouselList.js","components/Button.js","components/Carousel.js","components/Settings.js","App.js","index.js"],"names":["emoji","CarouselList","images","itemWidth","duration","translation","className","style","transition","transform","map","image","key","width","src","alt","replace","Button","arrow","arrowSize","buttonClickHandler","type","height","top","borderRadius","onClick","Carousel","state","switchImages","sign","props","step","frmSize","infinite","setState","prevState","position","stepWidth","frmWidth","carouselWidth","length","Math","max","min","render","nextProps","this","Component","Settings","option","frameSize","onChangeSetting","name","value","onChange","num","idx","slice","checked","id","htmlFor","aria-label","App","handleChangeSetting","event","target","React","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.50ba8afe.chunk.js","sourcesContent":["export const emoji = [\n  './img/01.png',\n  './img/02.png',\n  './img/03.png',\n  './img/04.png',\n  './img/05.png',\n  './img/06.png',\n  './img/07.png',\n  './img/08.png',\n  './img/09.png',\n  './img/10.png',\n  './img/11.png',\n  './img/12.png',\n  './img/13.png',\n  './img/14.png',\n  './img/16.png',\n  './img/17.png',\n  './img/18.png',\n  './img/19.png',\n  './img/20.png',\n  './img/21.png',\n  './img/22.png',\n  './img/23.png',\n  './img/24.png',\n  './img/25.png',\n  './img/26.png',\n  './img/27.png',\n  './img/28.png',\n  './img/29.png',\n  './img/30.png',\n  './img/31.png',\n  './img/32.png',\n  './img/33.png',\n  './img/34.png',\n];\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CarouselList = ({ images, itemWidth, duration, translation }) => (\n  <ul\n    className=\"carousel__list\"\n    style={{\n      transition: `transform ${duration}ms ease-out`,\n      transform: `translateX(${translation}px)`,\n    }}\n  >\n    {images.map(image => (\n      <li key={image} className=\"carousel__item\">\n        <img\n          className=\"carousel_image\"\n          style={{ width: itemWidth }}\n          src={image}\n          alt={image.replace(/\\D/g, '')}\n        />\n      </li>\n    ))}\n  </ul>\n);\n\nCarouselList.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.string).isRequired,\n  itemWidth: PropTypes.number.isRequired,\n  duration: PropTypes.number.isRequired,\n  translation: PropTypes.number.isRequired,\n};\n\nexport default CarouselList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ arrow, arrowSize, itemWidth, buttonClickHandler }) => (\n  <button\n    type=\"button\"\n    className={\n      arrow === 'ðŸ¢¦'\n        ? 'carousel__arrow carousel__arrow--prev'\n        : 'carousel__arrow carousel__arrow--next'\n    }\n    style={{\n      width: arrowSize,\n      height: arrowSize,\n      top: itemWidth / 2 - arrowSize / 2,\n      borderRadius: itemWidth / 2,\n    }}\n    onClick={buttonClickHandler}\n  >\n    {arrow}\n  </button>\n);\n\nButton.propTypes = {\n  arrow: PropTypes.string.isRequired,\n  itemWidth: PropTypes.number.isRequired,\n  arrowSize: PropTypes.number.isRequired,\n  buttonClickHandler: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport CarouselList from './CarouselList';\nimport Button from './Button';\n\nclass Carousel extends Component {\n  state = { translation: 0 }\n\n  shouldComponentUpdate(nextProps) {\n    return nextProps.infinite === this.props.infinite;\n  }\n\n  switchImages = (sign) => {\n    const { step, images, itemWidth, frmSize, infinite } = this.props;\n\n    this.setState((prevState) => {\n      let position = prevState.translation;\n      const stepWidth = itemWidth * step;\n      const frmWidth = itemWidth * frmSize;\n      const carouselWidth = itemWidth * images.length;\n\n      if (sign > 0) {\n        if (infinite && position === frmWidth - carouselWidth) {\n          position = stepWidth;\n        }\n\n        position -= stepWidth;\n        position = Math.max(position, -itemWidth * (images.length - frmSize));\n      } else {\n        if (infinite && position === 0) {\n          position = frmWidth - carouselWidth - stepWidth;\n        }\n\n        position += stepWidth;\n        position = Math.min(0, position);\n      }\n\n      return { translation: position };\n    });\n  };\n\n  render = () => {\n    const { images, frmSize, itemWidth, duration } = this.props;\n    const { translation } = this.state;\n\n    return (\n      <div\n        className=\"carousel\"\n        style={{ width: frmSize * itemWidth }}\n      >\n        <Button\n          buttonClickHandler={() => this.switchImages(-1)}\n          {...this.props}\n          arrow=\"ðŸ¢¦\"\n        />\n        <div className=\"carousel__container\">\n          <CarouselList\n            images={images}\n            itemWidth={itemWidth}\n            duration={duration}\n            translation={translation}\n          />\n        </div>\n        <Button\n          buttonClickHandler={() => this.switchImages(1)}\n          {...this.props}\n          arrow=\"ðŸ¢§\"\n        />\n        <h1 className=\"main-title\">\n          {`Carousel with ${images.length} emoji`}\n        </h1>\n      </div>\n    );\n  };\n}\n\nCarousel.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.string).isRequired,\n  itemWidth: PropTypes.number.isRequired,\n  frmSize: PropTypes.number.isRequired,\n  arrowSize: PropTypes.number.isRequired,\n  step: PropTypes.number.isRequired,\n  duration: PropTypes.number.isRequired,\n  infinite: PropTypes.bool.isRequired,\n};\n\nexport default Carousel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Settings = ({ option, frameSize, step, infinite, onChangeSetting }) => (\n  <div className=\"ui inverted orange segment setting\">\n    <div className=\"ui inverted equal width form mini\">\n      <div className=\"fields\">\n        <div className=\"field setting__frame\">\n          Number of emojis in the frame\n          <select\n            name=\"frameSize\"\n            value={frameSize}\n            onChange={onChangeSetting}\n            className=\"setting__select\"\n          >\n            {option.map((num, idx) => (\n              <option key={num} value={idx + 1}>{num}</option>\n            ))}\n          </select>\n        </div>\n        <div className=\"field setting__step\">\n          Slide step\n          <select\n            name=\"step\"\n            value={step}\n            onChange={onChangeSetting}\n            className=\"setting__select\"\n          >\n            {option.slice(0, frameSize).map((num, idx) => (\n              <option key={num} value={idx + 1}>{num}</option>\n            ))}\n          </select>\n        </div>\n        <div className=\"field setting__infinite\">\n          Infinite\n          <div className=\"ui checkbox\">\n            <input\n              onChange={onChangeSetting}\n              checked={infinite}\n              id=\"infinite\"\n              name=\"infinite\"\n              type=\"checkbox\"\n              className=\"hidden\"\n            />\n            <label htmlFor=\"infinite\" aria-label={infinite} />\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nSettings.propTypes = {\n  option: PropTypes.arrayOf(PropTypes.string).isRequired,\n  frameSize: PropTypes.string.isRequired,\n  step: PropTypes.string.isRequired,\n  infinite: PropTypes.bool.isRequired,\n  onChangeSetting: PropTypes.func.isRequired,\n};\n\nexport default Settings;\n","import React from 'react';\nimport './App.scss';\nimport { emoji } from './api/emoji';\nimport Carousel from './components/Carousel';\nimport Settings from './components/Settings';\n\nclass App extends React.Component {\n  state = {\n    images: emoji,\n    frameSize: '1',\n    step: '1',\n    option: ['One', 'Two', 'Three', 'Four', 'Five'],\n    infinite: false,\n  };\n\n  handleChangeSetting = (event) => {\n    const { name, value, type, checked } = event.target;\n\n    if (type === 'checkbox') {\n      this.setState({ [name]: checked });\n    } else if (name === 'frameSize') {\n      this.setState({\n        [name]: value,\n        step: value,\n      });\n    } else {\n      this.setState({ [name]: value });\n    }\n  };\n\n  render = () => {\n    const { images, frameSize, step, infinite } = this.state;\n\n    return (\n      <div className=\"App\">\n        <Settings\n          {...this.state}\n          onChangeSetting={this.handleChangeSetting}\n        />\n        <Carousel\n          images={images}\n          step={+step}\n          frmSize={+frameSize}\n          itemWidth={130}\n          duration={700}\n          arrowSize={35}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}